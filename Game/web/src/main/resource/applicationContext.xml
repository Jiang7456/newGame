<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 配置数据源(连接池：dbcp)
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	 -->
	 <!-- c3p0 -->
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	 	<property name="driverClass"  value="${jdbc.driver}"></property>
	 	<property name="jdbcUrl" value="${jdbc.url}"></property>
	 	<property name="user" value="${jdbc.username}"></property>
	 	<property name="password" value="${jdbc.password}"></property>
	 </bean>
	 
	<!-- 会话工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置扫描mapper.xml文件 -->
		<property name="mapperLocations" value="classpath:org/java/sys/mappers/*.xml"></property>
		<!-- 加载mybaytis的核心配置文件 -->
		<property name="configLocation" value="classpath:SqlMapConfig.xml"></property>
	</bean>
	
	<!-- 自动扫描包，将包里的mapper接口自动生成bean的实例，id就是mapper接口的首字母小写 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描的包的名字 -->
		<property name="basePackage" value="org.java.sys.dao"></property>
		<!-- 注入sqlSessionFactory  -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 配置事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 事务管理有几种方式:七种
		常用：tx标签通过通知的方式进行事务管理
	 -->
	 <tx:advice id="txAdvice" transaction-manager="transactionManager">
	 	<tx:attributes>
	 		<tx:method name="insert*" propagation="REQUIRED"/>
	 		<tx:method name="delete*" propagation="REQUIRED"/>
	 		<tx:method name="update*" propagation="REQUIRED"/>
	 		<!-- 查询不需要进行事务处理 -->
	 		<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
	 		<tx:method name="select*" propagation="REQUIRED" read-only="true"/>
	 		<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
	 	</tx:attributes>
	 </tx:advice>
	 <!-- aop -->
	 <aop:config>
	 	<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.jyl.web.service.impl.*.*(..))"/>
	 </aop:config>
	 
	<!-- 扫描包 
	<context:component-scan base-package="org.java"></context:component-scan>-->
</beans>